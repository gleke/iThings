// Code generated by goctl. DO NOT EDIT.
// Source: stock.proto

package server

import (
	"context"

	"github.com/i-Things/things/src/stocksvr/internal/logic"
	"github.com/i-Things/things/src/stocksvr/internal/svc"
	"github.com/i-Things/things/src/stocksvr/types/pb/stock"
)

type StockServer struct {
	svcCtx *svc.ServiceContext
	stock.UnimplementedStockServer
}

func NewStockServer(svcCtx *svc.ServiceContext) *StockServer {
	return &StockServer{
		svcCtx: svcCtx,
	}
}

func (s *StockServer) StockLocationCreate(ctx context.Context, in *stock.ReqStockLocationCreate) (*stock.ResStockLocationCreate, error) {
	l := logic.NewStockLocationCreateLogic(ctx, s.svcCtx)
	return l.StockLocationCreate(in)
}

func (s *StockServer) StockLocationUpdate(ctx context.Context, in *stock.ReqStockLocationUpdate) (*stock.ResStockLocationUpdate, error) {
	l := logic.NewStockLocationUpdateLogic(ctx, s.svcCtx)
	return l.StockLocationUpdate(in)
}

func (s *StockServer) StockLocationDelete(ctx context.Context, in *stock.ReqStockLocationDelete) (*stock.ResStockLocationDelete, error) {
	l := logic.NewStockLocationDeleteLogic(ctx, s.svcCtx)
	return l.StockLocationDelete(in)
}

func (s *StockServer) StockLocationList(ctx context.Context, in *stock.ReqStockLocationList) (*stock.ResStockLocationList, error) {
	l := logic.NewStockLocationListLogic(ctx, s.svcCtx)
	return l.StockLocationList(in)
}

func (s *StockServer) StockMoveCreate(ctx context.Context, in *stock.ReqStockMoveCreate) (*stock.ResStockMoveCreate, error) {
	l := logic.NewStockMoveCreateLogic(ctx, s.svcCtx)
	return l.StockMoveCreate(in)
}

func (s *StockServer) StockMoveUpdate(ctx context.Context, in *stock.ReqStockMoveUpdate) (*stock.ResStockMoveUpdate, error) {
	l := logic.NewStockMoveUpdateLogic(ctx, s.svcCtx)
	return l.StockMoveUpdate(in)
}

func (s *StockServer) StockMoveDelete(ctx context.Context, in *stock.ReqStockMoveDelete) (*stock.ResStockMoveDelete, error) {
	l := logic.NewStockMoveDeleteLogic(ctx, s.svcCtx)
	return l.StockMoveDelete(in)
}

func (s *StockServer) StockMoveList(ctx context.Context, in *stock.ReqStockMoveList) (*stock.ResStockMoveList, error) {
	l := logic.NewStockMoveListLogic(ctx, s.svcCtx)
	return l.StockMoveList(in)
}

func (s *StockServer) StockMoveView(ctx context.Context, in *stock.ReqStockMoveView) (*stock.ResStockMoveView, error) {
	l := logic.NewStockMoveViewLogic(ctx, s.svcCtx)
	return l.StockMoveView(in)
}

func (s *StockServer) StockMoveBatchCreate(ctx context.Context, in *stock.ReqStockMoveBatchCreate) (*stock.ResStockMoveBatchCreate, error) {
	l := logic.NewStockMoveBatchCreateLogic(ctx, s.svcCtx)
	return l.StockMoveBatchCreate(in)
}

func (s *StockServer) StockMoveBatchUpdate(ctx context.Context, in *stock.ReqStockMoveBatchUpdate) (*stock.ResStockMoveBatchUpdate, error) {
	l := logic.NewStockMoveBatchUpdateLogic(ctx, s.svcCtx)
	return l.StockMoveBatchUpdate(in)
}

func (s *StockServer) StockMoveBatchDelete(ctx context.Context, in *stock.ReqStockMoveBatchDelete) (*stock.ResStockMoveBatchDelete, error) {
	l := logic.NewStockMoveBatchDeleteLogic(ctx, s.svcCtx)
	return l.StockMoveBatchDelete(in)
}

func (s *StockServer) StockMoveUpdatePartial(ctx context.Context, in *stock.ReqStockMoveUpdatePartial) (*stock.ResStockMoveUpdatePartial, error) {
	l := logic.NewStockMoveUpdatePartialLogic(ctx, s.svcCtx)
	return l.StockMoveUpdatePartial(in)
}

func (s *StockServer) StockMoveUpdateAutomaticPartial(ctx context.Context, in *stock.ReqStockMoveUpdateAutomaticPartial) (*stock.ResStockMoveUpdateAutomaticPartial, error) {
	l := logic.NewStockMoveUpdateAutomaticPartialLogic(ctx, s.svcCtx)
	return l.StockMoveUpdateAutomaticPartial(in)
}

func (s *StockServer) SendMsg(ctx context.Context, in *stock.ReqSendMsg) (*stock.ResSendMsg, error) {
	l := logic.NewSendMsgLogic(ctx, s.svcCtx)
	return l.SendMsg(in)
}
